
//            File imgFile = new File(imgUrl);
//            FileBody fileBody = new FileBody(imgFile, ContentType.DEFAULT_BINARY);


//PhotoRevClassOld


 made an image util
and put the three functions related as you did

now I need to restructure the Photo review class

package com.practice.workflow;

import jakarta.inject.Named;
import org.apache.http.HttpEntity;
import org.apache.http.client.methods.CloseableHttpResponse;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.ContentType;
import org.apache.http.entity.mime.MultipartEntityBuilder;
import org.apache.http.entity.mime.content.ByteArrayBody;
import org.apache.http.impl.client.CloseableHttpClient;
import org.apache.http.impl.client.HttpClients;
import org.apache.http.util.EntityUtils;
import org.camunda.bpm.engine.delegate.DelegateExecution;
import org.camunda.bpm.engine.delegate.JavaDelegate;
import org.json.JSONObject;

import javax.imageio.ImageIO;
import java.awt.image.BufferedImage;
import java.io.ByteArrayInputStream;
import java.io.ByteArrayOutputStream;
import java.io.IOException;
import java.net.URL;
import java.util.Base64;
import java.util.Set;

@Named
public class PhotoReviewww implements JavaDelegate {


    @Override
    public void execute(DelegateExecution execution) throws Exception {

        boolean reviewDecision = false; // or true, based on your logic

        String imgUrl = execution.getVariable("imgUrl").toString();

        String blackRedDetectApi = "http://127.0.0.1:5000/check_image";

        try(CloseableHttpClient httpClient = HttpClients.createDefault()){
            HttpPost uploadImgFile = new HttpPost(blackRedDetectApi);
            BufferedImage image = ImageUtils.getImageFromUrl(imgUrl);
            if (image != null) {
            String imageFormat = ImageUtils.getImageFormat(imgUrl);

            ByteArrayOutputStream baos = new ByteArrayOutputStream();

            ImageIO.write(image,imageFormat,baos);

            byte[] imageBytes = baos.toByteArray();

            ByteArrayBody byteArrayBody = new ByteArrayBody(imageBytes,ContentType.DEFAULT_BINARY,"image.jpg");
            HttpEntity imageHttpEntity = MultipartEntityBuilder.create()
                    .addPart("image", byteArrayBody)
                    .build();
            uploadImgFile.setEntity(imageHttpEntity);

            try(CloseableHttpResponse response = httpClient.execute(uploadImgFile)){
                String jsonResponse = EntityUtils.toString(response.getEntity());

                JSONObject jsonObject = new JSONObject(jsonResponse);
                int prediction = jsonObject.getInt("prediction");

                reviewDecision = (prediction == 1);
                execution.setVariable("reviewDecision", reviewDecision);
                System.out.println("Setting reviewDecision to: " + reviewDecision);

            }

            }
        }


    }


}


I need separation of concerns